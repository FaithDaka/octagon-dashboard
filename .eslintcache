[{"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\index.js":"1","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\App.js":"2","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Login\\index.js":"3","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Components\\LoadSpinner.js":"4","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Components\\Layout\\index.js":"5","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Components\\Header\\index.js":"6","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Components\\Tabs\\index.js":"7","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Dashboard\\index.js":"8","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Components\\Modal\\index.js":"9","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Components\\Modal\\Assign.js":"10","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Cases\\index.js":"11","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Components\\Modal\\ReAssign.js":"12","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Cases\\AddCase.js":"13","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Cases\\CaseTable.js":"14","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Clients\\index.js":"15","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Clients\\AddClient.js":"16","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Clients\\Company.js":"17","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Clients\\Individual.js":"18","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\utils\\helpers\\storage.js":"19","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\utils\\helpers\\set.js":"20","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Cases\\UpdateCase.js":"21","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Clients\\ClientManagement.js":"22"},{"size":230,"mtime":1611410373236,"results":"23","hashOfConfig":"24"},{"size":1141,"mtime":1612986842607,"results":"25","hashOfConfig":"24"},{"size":2570,"mtime":1612896310680,"results":"26","hashOfConfig":"24"},{"size":295,"mtime":1611408163489,"results":"27","hashOfConfig":"24"},{"size":474,"mtime":1612974636627,"results":"28","hashOfConfig":"24"},{"size":1089,"mtime":1612901711640,"results":"29","hashOfConfig":"24"},{"size":2837,"mtime":1612989748768,"results":"30","hashOfConfig":"24"},{"size":5830,"mtime":1612989591185,"results":"31","hashOfConfig":"24"},{"size":929,"mtime":1612391332262,"results":"32","hashOfConfig":"24"},{"size":3101,"mtime":1612910121166,"results":"33","hashOfConfig":"24"},{"size":340,"mtime":1612975137506,"results":"34","hashOfConfig":"24"},{"size":3394,"mtime":1612990049169,"results":"35","hashOfConfig":"24"},{"size":6709,"mtime":1612979532177,"results":"36","hashOfConfig":"24"},{"size":4140,"mtime":1612979909199,"results":"37","hashOfConfig":"24"},{"size":4320,"mtime":1612986667323,"results":"38","hashOfConfig":"24"},{"size":825,"mtime":1612986886236,"results":"39","hashOfConfig":"24"},{"size":6626,"mtime":1612989204606,"results":"40","hashOfConfig":"24"},{"size":6075,"mtime":1612988124593,"results":"41","hashOfConfig":"24"},{"size":570,"mtime":1612896085286,"results":"42","hashOfConfig":"24"},{"size":712,"mtime":1612896045765,"results":"43","hashOfConfig":"24"},{"size":6757,"mtime":1612984270353,"results":"44","hashOfConfig":"24"},{"size":288,"mtime":1612985411265,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"8iai2g",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\index.js",[],[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\App.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Login\\index.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Components\\LoadSpinner.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Components\\Layout\\index.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Components\\Header\\index.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Components\\Tabs\\index.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Dashboard\\index.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Components\\Modal\\index.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Components\\Modal\\Assign.js",["95","96","97","98"],"import React, { useEffect, useState } from 'react';\r\nimport LoadSpinner from '../LoadSpinner';\r\nimport { getEmployees, getClientCases } from '../../utils/helpers/storage';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\n\r\nconst Assign = ({ close, id, case_name, client }) => {\r\n  const [emps, setEmps] = useState(JSON.parse(getEmployees()))\r\n  var [c_case, setCCases] = useState(JSON.parse(getClientCases()))\r\n\r\n  const [emp_name, setName] = useState('')\r\n\r\n  const [showAlert, setShowAlert] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const hideAlert = () => setShowAlert(false)||setError('');\r\n\r\n  const [loading, setLoading]= useState(false)\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true)\r\n\r\n    c_case = c_case.filter(function (_c) {\r\n      return _c.id !== id;\r\n    });\r\n\r\n    const newCC = {\r\n      id:id,\r\n      client:client,\r\n      case:case_name,\r\n      assigned:emp_name\r\n    }\r\n\r\n    c_case.push(newCC)\r\n    setCCases(c_case)\r\n    console.log('New CC:', c_case)\r\n    localStorage.setItem('ClientCase', JSON.stringify(c_case))\r\n\r\n    setLoading(false)\r\n    setShowAlert(true);\r\n    setSuccess('Updated')\r\n    close()\r\n  }\r\n\r\n  const loadData = () =>{\r\n    setEmps(emps)\r\n    setCCases(c_case)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    loadData()\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"card otc__assign\">\r\n      {showAlert && success && (\r\n        <SweetAlert\r\n          success\r\n          onConfirm={() => hideAlert()}\r\n          onCancel={() => hideAlert()}\r\n          title={success}\r\n          timeout={3000}\r\n        />\r\n      )}\r\n      {showAlert && error && (\r\n        <SweetAlert\r\n          danger\r\n          onConfirm={() => hideAlert()}\r\n          onCancel={() => hideAlert()}\r\n          title={error}\r\n          timeout={4000}\r\n        />\r\n      )}\r\n      <div className=\"card-header\" />\r\n      <div className=\"card-body\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Case</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={case_name}\r\n            >\r\n              <option>{case_name}</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Employee</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={emp_name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            >\r\n              <option>{null}</option>\r\n              {emps.length > 0 ? (\r\n                emps.map((e) => \r\n                  <option key={e.id} value={e.name}\r\n                    onClick={()=>setName(e.name)}>\r\n                    {e.name}\r\n                  </option>)\r\n              ) : (\r\n                <LoadSpinner />\r\n              )}\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            {loading ? <LoadSpinner /> : 'Assign Case'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Assign\r\n","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Cases\\index.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Components\\Modal\\ReAssign.js",["99","100","101","102","103"],"import React, { useEffect, useState } from 'react';\r\nimport LoadSpinner from '../LoadSpinner';\r\nimport { getEmployees, getClientCases } from '../../utils/helpers/storage';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\n\r\nconst ReAssign = ({ close, id, case_name, assigned, client }) => {\r\n  const [emp_name, setName] = useState('')\r\n  const [emps, setEmps] = useState(JSON.parse(getEmployees()))\r\n  var [c_case, setCCases] = useState(JSON.parse(getClientCases()))\r\n\r\n  const [showAlert, setShowAlert] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const hideAlert = () => setShowAlert(false)||setError('');\r\n\r\n  const [loading, setLoading]= useState(false)\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true)\r\n\r\n    c_case = c_case.filter(function (_c) {\r\n      return _c.id !== id;\r\n    });\r\n\r\n    const newCC = {\r\n      id:id,\r\n      client:client,\r\n      case:case_name,\r\n      assigned:emp_name\r\n    }\r\n\r\n    c_case.push(newCC)\r\n    setCCases(c_case)\r\n    console.log('New CC:', c_case)\r\n    localStorage.setItem('ClientCase', JSON.stringify(c_case))\r\n\r\n    setLoading(false)\r\n    setShowAlert(true);\r\n    setSuccess('Updated')\r\n    close()\r\n  }\r\n\r\n  const loadData = () =>{\r\n    setEmps(emps)\r\n    setCCases(c_case)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    loadData()\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"card otc__assign\">\r\n      {showAlert && success && (\r\n        <SweetAlert\r\n          success\r\n          onConfirm={() => hideAlert()}\r\n          onCancel={() => hideAlert()}\r\n          title={success}\r\n          timeout={3000}\r\n        />\r\n      )}\r\n      {showAlert && error && (\r\n        <SweetAlert\r\n          danger\r\n          onConfirm={() => hideAlert()}\r\n          onCancel={() => hideAlert()}\r\n          title={error}\r\n          timeout={4000}\r\n        />\r\n      )}\r\n      <div className=\"card-header\" />\r\n      <div className=\"card-body\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Case</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Category Name\"\r\n              value={case_name}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>From</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Category Name\"\r\n              value={assigned}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>To</label>\r\n            <select\r\n              className=\"form-control\"\r\n              value={emp_name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            >\r\n              <option>{null}</option>\r\n              {emps.length > 0 ? (\r\n                emps.map((e) => \r\n                  <option key={e.id} value={e.name}\r\n                    onClick={()=>setName(e.name)}>\r\n                    {e.name}\r\n                  </option>)\r\n              ) : (\r\n                <LoadSpinner />\r\n              )}\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            {loading ? <LoadSpinner /> : 'Re-assign Case'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReAssign\r\n","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Cases\\AddCase.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Cases\\CaseTable.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Clients\\index.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Clients\\AddClient.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Clients\\Company.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Clients\\Individual.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\utils\\helpers\\storage.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\utils\\helpers\\set.js",[],"C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Cases\\UpdateCase.js",["104","105","106"],"import React, { useEffect, useState } from 'react'\r\nimport LoadSpinner from '../../Components/LoadSpinner'\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { getCases, getClients, getEmployees, getCategories } from '../../utils/helpers/storage';\r\nimport CaseManagement from '.';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst UpdateCase = (props) => {\r\n  const _id = props.match.params.id\r\n\r\n  const [clients, setClients] = useState(JSON.parse(getClients()))\r\n  const [emps, setEmps] = useState(JSON.parse(getEmployees()))\r\n  const [cats, setCats] = useState(JSON.parse(getCategories()))\r\n  var [_cases, setCases] = useState(JSON.parse(getCases())) \r\n\r\n  const [_client, setClientName] = useState('')\r\n  const [_cat, setCategory] = useState('')\r\n  const [create_emp, setCreate] = useState('')\r\n  const [assign_emp, setAssign] = useState('')\r\n  const [desc, setDesc] = useState('')\r\n\r\n  const [showAlert, setShowAlert] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const hideAlert = () => setShowAlert(false)||setError('');\r\n \r\n  const [loading, setLoading]= useState(false)\r\n  const history = useHistory()\r\n\r\n  const loadData = () =>{\r\n    setEmps(emps)\r\n    setClients(clients)\r\n    setCats(cats)\r\n    setCases(_cases)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    loadData()\r\n  },[])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true)\r\n\r\n    _cases = _cases.filter(function (_cases) {\r\n      return _cases.id !== _id;\r\n    });\r\n\r\n    const updateCase = {\r\n      id:_id,\r\n      name:desc,\r\n      category:_cat,\r\n      client:_client,\r\n      created_by:create_emp,\r\n      assigned_to:assign_emp,\r\n      date_created: Date()\r\n    }\r\n\r\n    _cases.push(updateCase)\r\n    setCases(_cases)\r\n    console.log('Updated Cases:', _cases)\r\n    localStorage.setItem('Cases', JSON.stringify(_cases))\r\n\r\n    setLoading(false)\r\n    setShowAlert(true);\r\n    setSuccess('Case Updated')\r\n    setTimeout(() => {\r\n      history.push('/cases')\r\n    }, 3000);\r\n  }\r\n\r\n  return (\r\n    <CaseManagement>\r\n      {showAlert && success && (\r\n        <SweetAlert\r\n          success\r\n          onConfirm={() => hideAlert()}\r\n          onCancel={() => hideAlert()}\r\n          title={success}\r\n          timeout={3000}\r\n        />\r\n      )}\r\n      {showAlert && error && (\r\n        <SweetAlert\r\n          danger\r\n          onConfirm={() => hideAlert()}\r\n          onCancel={() => hideAlert()}\r\n          title={error}\r\n          timeout={4000}\r\n        />\r\n      )}\r\n      <div className=\"otc__add-case card\">\r\n        <div className=\"row\">\r\n          <div>\r\n            <h2>Update Case</h2>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"row\">\r\n                <div className=\"form-group left\">\r\n                  <label>Client</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={_client}\r\n                    onChange={(e) => setClientName(e.target.value)}\r\n                  >\r\n                    <option>{_client}</option>\r\n                    {\r\n                      clients.length > 0 ? (\r\n                        clients.map((client) => \r\n                          <option key={client.id} value={client.name}\r\n                            onClick={()=>setClientName(client.name)}>\r\n                            {client.name}\r\n                          </option>)\r\n                      ) : (\r\n                        <LoadSpinner />\r\n                      )}\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group right\">\r\n                  <label>Category</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={_cat}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                  >\r\n                    <option>{_cat}</option>\r\n                    { \r\n                      cats && cats.length > 0 ? (\r\n                        cats.map((cat) => \r\n                          <option key={cat.id} value={cat.name}>\r\n                            {cat.name}\r\n                          </option>)\r\n                      ) : (\r\n                        <LoadSpinner />\r\n                      )}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group left\">\r\n                  <label>Created By</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={create_emp}\r\n                    onChange={(e) => setCreate(e.target.value)}\r\n                  >\r\n                    <option>{create_emp}</option>\r\n                    { \r\n                      emps && emps.length > 0 ? (\r\n                        emps.map((c) => \r\n                          <option key={c.id} value={c.name}\r\n                            onClick={()=>setCreate(c.name)}>\r\n                            {c.name}\r\n                          </option>)\r\n                      ) : (\r\n                        <LoadSpinner />\r\n                      )}\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group right\">\r\n                  <label>Assigned To</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={assign_emp}\r\n                    onChange={(e) => setAssign(e.target.value)}\r\n                  >\r\n                    <option>{assign_emp}</option>\r\n                    { \r\n                      emps && emps.length > 0 ? (\r\n                        emps.map((c) => \r\n                          <option key={c.id} value={c.name}\r\n                            onClick={()=>setAssign(c.name)}>\r\n                            {c.name}\r\n                          </option>)\r\n                      ) : (\r\n                        <LoadSpinner />\r\n                      )}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group desc\">\r\n                <label>Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"case description\"\r\n                  value={name}\r\n                  onChange={(e) => setDesc(e.target.value)}\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-danger\">\r\n                {loading ? <LoadSpinner /> : 'Update Case'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n            \r\n    </CaseManagement>\r\n  )\r\n}\r\n\r\nexport default UpdateCase\r\n","C:\\Users\\FAITH DAKA\\octagon_tc\\src\\Pages\\Clients\\ClientManagement.js",["107"],"import React from 'react'\r\nimport Layout from '../../Components/Layout'\r\n\r\nconst ClientManagement = ({children}) => {\r\n  return (\r\n    <Layout>\r\n      <div className='otc__case container-fluid'>\r\n        {children}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ClientManagement\r\n",{"ruleId":"108","severity":1,"message":"109","line":6,"column":19,"nodeType":"110","endLine":6,"endColumn":24},{"ruleId":"108","severity":1,"message":"111","line":6,"column":26,"nodeType":"110","endLine":6,"endColumn":28},{"ruleId":"108","severity":1,"message":"112","line":6,"column":30,"nodeType":"110","endLine":6,"endColumn":39},{"ruleId":"108","severity":1,"message":"113","line":6,"column":41,"nodeType":"110","endLine":6,"endColumn":47},{"ruleId":"108","severity":1,"message":"109","line":6,"column":21,"nodeType":"110","endLine":6,"endColumn":26},{"ruleId":"108","severity":1,"message":"111","line":6,"column":28,"nodeType":"110","endLine":6,"endColumn":30},{"ruleId":"108","severity":1,"message":"112","line":6,"column":32,"nodeType":"110","endLine":6,"endColumn":41},{"ruleId":"108","severity":1,"message":"114","line":6,"column":43,"nodeType":"110","endLine":6,"endColumn":51},{"ruleId":"108","severity":1,"message":"113","line":6,"column":53,"nodeType":"110","endLine":6,"endColumn":59},{"ruleId":"108","severity":1,"message":"115","line":9,"column":21,"nodeType":"116","endLine":9,"endColumn":26},{"ruleId":"108","severity":1,"message":"117","line":9,"column":27,"nodeType":"116","endLine":9,"endColumn":33},{"ruleId":"108","severity":1,"message":"118","line":9,"column":34,"nodeType":"116","endLine":9,"endColumn":36},{"ruleId":"108","severity":1,"message":"119","line":4,"column":28,"nodeType":"110","endLine":4,"endColumn":36},"react/prop-types","'close' is missing in props validation","Property","'id' is missing in props validation","'case_name' is missing in props validation","'client' is missing in props validation","'assigned' is missing in props validation","'match' is missing in props validation","Identifier","'match.params' is missing in props validation","'match.params.id' is missing in props validation","'children' is missing in props validation"]